"""
모험가가 N명. 공포도를 각각 측정.
공포도가 X인 모험가는 반드시 X명 이상으로 구성한 그룹에 참여해야함.
N과 N에 해당하는 정보가 주어질 때
최대 몇개의 모험가 그룹을 만들 수 있는지 리턴하라. 그룹 수를 최대화 해야함.
예) N=5, [2,3,1,2,2]
sort -> [3,2,2,2,1]
3인 모험가는 3명 이상 그룹에
2인 모험가는 2명 이상
1인 모험가는 1명 이상
[1,2,2,2,3] 이면, 3이 가장 제약이 큰 상황.
[1,2,2,2,2,4] 이면, 어찌되었든 최소값에 대해서 그룹을 만든 값이 max로 간다.
"""
def solution(N, X):
    X = sorted(X) # 오름차순으로 소팅
    count = 0 # 현재 그룹에 포함된 모험가의 수
    group = 0 # 결성된 총 그룹의 수

    for i in X:
        count += 1
        if count >= i: # 현재 그룹에 포함된 모험가의 수와 현재 확인하고 있는 공포도를 비교.
            group += 1
            count = 0 # 초기화

    return group

if __name__ == "__main__":
    N = 5
    X = [2,3,1,2,2]
    print(solution(N, X))