if __name__ == "__main__":
    import sys; readline = sys.stdin.readline
    array_size = int(readline().strip()) # 10만까지
    target = int(readline().strip()) # 10억
    """
    이분탐색으로 풀려면 무조건 O/X로 문제를 읽어내야 한다.
    임의의 숫자 m을 골랐을 때, 이게 K번째 숫자인가? -> O / X 문제로 변환! (임의의 숫자 m을 고르는 방법을 이분 탐색으로)
    
    K번째 숫자이면? 오케이 끝. K번째 숫자라는게 존재하지 않을 경우는? 없음.
    K보다 큰 번째 숫자이면? 앞으로 조금만 당겨보자 (좌측 탐색)
    K보다 작은 번째 숫자이면? 뒤로 조금만 가보자 (우측 탐색)
    
    결론적으로, O/X를 판별하는 저 함수만 만들어내면 된다.
    주어진 i*j 집합에서, 임의의 숫자 m 보다 작거나 같은 숫자가 몇개인지 세주면 O/X를 판별할 수 있다.
    m 앞에 K-1개의 숫자가 있다면 m은 K번째 수라고 할 수 있겠지.
    숫자가 몇개인지 세주는 count라는 함수를 만들고 이의 리턴값과 K를 비교하면서 이분탐색을 하면 된다.
    
    [count 함수]
    총 i행 j열의 숫자들.
    1행 -> 1*1, 1*2, 1*3, ... : 1의 배수이면서, 1*N까지의 숫자가 N개
    2행 -> 2*1, 2*2, 2*3, ... : 2의 배수이면서, 2*N까지의 숫자가 N개
    3행 -> 3*1, 3*2, 3*3, ... : 3의 배수이면서, 1*N까지의 숫자가 N개
    각 행에서 임의의 숫자 m의 위치를 판단한다. m 이하의 수가 몇 개 인가?
    1행 -> m // 1 or N, N은 만약에 m이 범위를 초과할 경우 N까지만 세주기 위해서임.
    2행 -> m // 2 or N
    3행 => m // 3 or N
    
    1. 어떻게 이분 탐색의 문제로 끌고갈 것인가?
    2. 이분 탐색을 실제로 수행하는 함수의 로직은 어떻게 짤 것인가?
    3. 이분 탐색의 시작점과 끝점은 어떻게 설정할 것인가? ex. 현 문제에서 K번째 숫자는 K보다 클 수 없으므로 end = K로 지정한다.
    """
    start = 1
    end = target # 7
    answer = 0
    while start <= end:
        mid = (start + end) // 2 # 4보다 작거나 같은 숫자는 어레이에서 몇개일까?

        count = 0 # 전체 array에서 mid보다 작거나 같은 숫자가 몇개인지 다 세줌
        for i in range(1, array_size+1): # 1부터 3까지 루프. 각 행은 배수로 이루어져 있음.
            count += min(mid // i, array_size) # 최대 array_size만큼 선택됨. 그 이상은 범위를 벗어남.

        if count >= target: # 만약 count가 target보다 크거나 같으면, 왼쪽으로 이동
            answer = mid # 저장
            end = mid - 1
        else: # 오른쪽으로 탐색
            start = mid + 1

    print(answer)





